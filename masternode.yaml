---
- hosts: tag_Name_master
  remote_user: ubuntu
  become: true
  become_user: root
  vars_files:
  - env_variables
  tasks:
  # Update the Repository
  - name: Update apt packages
    apt:
      update_cache: yes
  # Add the GPG key for Docker
  - name: Add the GPG key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
  # Add docker Repo
  - name: Add docker Repo
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable
      state: present
      update_cache: yes
  # Add the GPG key for kubernetes
  - name: Add the GPG key for kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present
  # Add the kubernetes repository
  - name: Add the kubernetes repository
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: 'kubernetes'
  # Update the Repository
  - name: Update the Repository
    apt:
      update_cache: yes
  # Install Docker and Kubernetes packages.
  - name: Install Docker and Kubernetes packages
    shell: sudo apt-get install -y docker-ce kubelet kubeadm kubectl
  # To hold the versions so that the versions will not get accidently upgraded.
  - name: To hold the versions so that the versions will not get accidently upgraded
    shell: sudo apt-mark hold docker-ce kubelet kubeadm kubectl
  # Start and enable Docker Services
  - name: Start and enable Docker Services
    shell: |
     sudo systemctl restart docker
     sudo systemctl enable docker
  # Disable Swap
  - name: Disabling Swap on all nodes
    shell: sudo swapoff -a
  # Enabling Network Ports on Master Node
  - name: Allow Network Ports in ufw
    ufw:
     port: "{{ item }}"
     state: enabled
     permanent: yes
     immediate: yes
    with_items: "{{ master_ports }}"
  # Allow Masquerading in Firewalld
  - name: Allow masquerading in ufw
    ufw:
     masquerade: "yes"
     state: enabled
     permanent: yes
     immediate: yes
  # Enable the iptables bridge(Set a value in the sysctl file , to allow proper network settings for Kubernetes on all the servers)
  - name: Enable the iptables bridge
    shell: |
     echo "net.bridge.bridge-nf-call-iptables=1" | sudo tee -a /etc/sysctl.conf
     sudo sysctl -p
  # Removing container Runtime Error
  - name: Remove config.toml and Restart Containerd
    shell: |
     sudo rm -rf /etc/containerd/config.toml
     sudo systemctl restart containerd
  # Initialize master node
  - name: Initializing Kubernetes cluster For Flannel CNI
    shell: sudo kubeadm init --pod-network-cidr=10.244.0.0/16
    register: output
  # Storing Logs and Generated token for future purpose.
  - name: Storing Logs and Generated token for future purpose
    local_action: copy content={{ output.stdout }} dest={{ token_file }}
    become: False
  # To start using the cluster with current user.
  - name: Copying required files
    shell: |
     mkdir -p $HOME/.kube
     sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
     sudo chown $(id -u):$(id -g) $HOME/.kube/config
  # Install network plugin on Master
  - name: To Set with flannel networking
    command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml